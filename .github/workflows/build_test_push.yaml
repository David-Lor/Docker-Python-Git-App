name: Build, Test & Push
on:
  push: {}
  workflow_dispatch: {}
  schedule:
    - cron: '0 0 * * *'  # every day at 0h

jobs:
  testBuild:
    # Run "build" tests
    name: Test (build)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Setup Python
        uses: actions/setup-python@master
        with:
          python-version: "3.8"
          architecture: "x64"
      - name: Install test requirements
        run: make test-install-requirements
      - name: Test
        run: make test-build

  build_testNoBuild_push:
    # Build, run "no-build" tests, and push to DockerHub if current branch is "master"
    name: "[python:${{ matrix.base_tag }}] Build, Test (no-build) & Push"
    runs-on: ubuntu-latest
    needs: testBuild
    strategy:
      fail-fast: false
      matrix:
        base_tag:  # Same Docker tags than those used on the official Python image: https://hub.docker.com/_/python/
          - latest
          - slim
          - alpine
          - buster
          - 3.9-buster
          - 3.7.9-buster
          - 3.7.9-alpine
          - 3.8-buster
          - 3.5-slim-stretch
          - 3.6-slim-stretch
          - 3.7-slim-stretch

    steps:
      # Preparation
      - name: Checkout
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Setup Python
        uses: actions/setup-python@master
        with:
          python-version: "3.8"
          architecture: "x64"
      - name: Install test requirements
        run: make test-install-requirements
      - name: Install QEMU
        uses: docker/setup-qemu-action@v1
      - name: Install Docker Buildx
        uses: docker/setup-buildx-action@v1
      # TODO Cache install of dependencies: https://docs.github.com/es/actions/guides/caching-dependencies-to-speed-up-workflows

      # Docker login
      - name: Login to DockerHub
        # if: github.ref == 'refs/heads/master'  # TODO uncomment
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      # TODO build & test before pushing for linux/amd64

      - name: Build & Push
        run: make buildx BASE_TAG=${{ matrix.base_tag }} ARCH=linux/amd64,linux/arm/v7
        # TODO rename BASE_TAG after testing
